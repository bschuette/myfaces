<?xml version="1.0" encoding="UTF-8"?>
      
        <!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation Maven//EN" "http://maven.apache.org/dtd/maven-xdoc.dtd">
      
    <!--
This is a standard template meant to be used for the documentation of all custom
components.
--><document>
    <body>
        <!-- Description -->
        <section name="Description">
            
            <p>A tag that defines a new bean (alias) with a given value.</p>
            <p>
                This allows you to design a subform with a generic (fictive) beans
                and to include it in all the pages where you use it. You just need
                to make an alias to the real bean named after the generic bean
                before including the subform.
                <br/>
                When used within an aliasBeansScope tag, this tag adds the alias
                to the aliasBeansScope. This makes configuration with multiple
                aliasBeans easier to write.
            </p>
        </section>
        <!-- screen shot -->
        <section name="Screen Shot">
            
            <p>Not Available</p> <!-- replace with either a figure or Not Available -->
            <!--
            <figure src="jscookmenu.png" alt="jscookmenu"/>
            -->
        </section>
        <!-- API -->
        <section name="API">
            
            <table>
                <tr>
                    <td colspan="1" rowspan="1">component-family</td>
                    <td colspan="1" rowspan="1">javax.faces.Data</td>
                </tr>
                <tr>
                    <td colspan="1" rowspan="1">renderer-type</td>
                    <td colspan="1" rowspan="1">org.apache.myfaces.AliasBean</td>
                </tr>
                <tr>
                    <td colspan="1" rowspan="1">component-class</td>
                    <td colspan="1" rowspan="1">org.apache.myfaces.custom.aliasbean.AliasBean</td>
                </tr>
                <tr>
                    <td colspan="1" rowspan="1">renderer-class</td>
                    <td colspan="1" rowspan="1">org.apache.myfaces.custom.aliasbean.AliasBeanRenderer</td>
                </tr>
                <tr>
                    <td colspan="1" rowspan="1">tag-class</td>
                    <td colspan="1" rowspan="1">org.apache.myfaces.custom.aliasbean.AliasBeanTag</td>
                </tr>
            </table>
        </section>
        <!-- Usage -->
        <section name="Usage">
            
            <source xml:space="preserve">
&lt;t:aliasBean alias="#{holder}" value="#{aliasTest1}"&gt;
    &lt;f:subview id="simulatedIncludedSubform1"&gt;
        &lt;h:outputLabel for="name" value="Name :"/&gt;
        &lt;h:inputText id="name" value="#{holder.name}"/&gt;
    &lt;/f:subview&gt;
&lt;/t:aliasBean&gt;
            </source>
        </section>
        <!-- Syntax -->
        <section name="Syntax">
            
            <blockquote><h3>&lt;t:aliasBean/&gt;</h3>
                <code>alias - The bean that will be set to the given value (Example : #{holder}).</code><br/>
                <code>
                    value - The value that the alias can be set to.
                    This can be a string (like "toto") or a reference to an existing
                    bean (like "#{myBean.member1}").
                </code>
                <br/>
            </blockquote>
        </section>
        <!-- Instructions -->
        <section name="Instructions">
            
            <p>see examples/aliasBean.jsp for an example!</p>
        </section>
    </body>
    
</document>