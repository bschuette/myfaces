<?xml version="1.0" encoding="UTF-8"?>
      
        <!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation Maven//EN" "http://maven.apache.org/dtd/maven-xdoc.dtd">
      
    <document>

<body>

    <section name="Custom Components">
        
        <p>
            See also the component section of our <a href="http://wiki.apache.org/myfaces/MyFacesComponents">WIKI</a>
            (might be more complete than the information here).
        </p>
        <p>
            MyFaces provides a series of JSF components that go beyond the JSF specification.  These components are 100% compatible
            with the Sun JSF 1.1 Reference Implementation (RI) or any other JSF 1.1 compatible implementation.  Of course the custom
            components can also be used with the Apache MyFaces JSF implementation.
        </p>
    </section>
    <section name="Extended Components and Other &quot;Goodies&quot;">
        
        <p>
            In addition to custom components not found in the JSF specification, the MyFaces components bundle also includes an
            "extended" version of some of the default components.  These are basically components that exist in either the core or
            html tag libraries but additional functionality has been addded that goes beyond the specification.
        </p>
        <ul>
            <li>Example: &lt;t:inputText&gt; - This is similar to the &lt;h:inputText&gt; component but it provides additional attributes
                such as <code>forceId</code>.  When this attribute is <code>true</code> the HTML generated will used the id
                specified by the <code>id</code> attribute instead of the one normally generated by following the JSF specification.
            </li>
        </ul>
        <ul>
            <li>Converters - MyFaces components project contains several custom objects that do not implement <code>UIComponent</code>.
                Some of these include objects that implement the <code>Converter</code> interface.
            </li>
        </ul>
        <ul>
            <li>Tiles Support - MyFaces provides a custom solution to allow use to use Tiles together with JSF.
            </li>
        </ul>
    </section>

    <section name="Requirements and Setup">
        
        <ul>
            <li>
                Put the <code>tomahawk.jar</code> in your <code>WEB-INF/lib</code> directory (or in the classpath of your
                application server.)
            </li>
        </ul>
        <blockquote><h3>Note</h3>
            If you are using the MyFaces implementation you can choose to use the <code>myfaces-all.jar</code> instead.  It is basically
            a single jar file containing the JSF 1.1 API, JSF 1.1 Implementation and the MyFaces custom components.
        </blockquote>
        <ul>
            <li>
                Install the <a href="extensionsFilter.html">MyFaces Extensions filter</a>
            </li>
        </ul>
        <ul>
            <li>
                Add the following to your JSP page in order to use one of the MyFaces custom components: <br/><br/>
                <code>&lt;%@ taglib uri="http://myfaces.apache.org/tomahawk" prefix="t"%&gt;</code>
            </li>
        </ul>
        <ul>
            <li>
                That's it! You're good to go.  Please see additional documentation for specific issues regarding the MyFaces API and
                implementation packages.
            </li>
        </ul>
    </section>

</body>



</document>